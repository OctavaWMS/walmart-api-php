<?php

/**
 * CreateLabelRequest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Walmart
 * @author   Jesse Evers
 * @link     https://highsidelabs.co
 * @email    jesse@highsidelabs.co
 */

/**
 * Ship With Walmart
 *
 * This class is auto-generated by the OpenAPI generator v7.12.0 (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

namespace Walmart\Models\CP\US\Feeds;

use Walmart\Models\BaseModel;

/**
 * CreateLabelRequest Class Doc Comment
 *
 * @category Class

 * @package  Walmart
 * @author   Jesse Evers
 * @link     https://highsidelabs.co
 * @email    jesse@highsidelabs.co
 */
class CreateLabelRequest extends BaseModel
{public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static string $openAPIModelName = 'createLabel_request';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static array $openAPITypes = [
        'accountType' => 'string',
        'addOns' => 'string[]',
        'boxDimensions' => '\Walmart\Models\CP\US\Feeds\CreateLabelRequestBoxDimensions',
        'boxItems' => '\Walmart\Models\CP\US\Feeds\LabelsDetailByPurchaseOrderId200ResponseDataInnerBoxItemsInner[]',
        'carrierName' => 'string',
        'carrierServiceType' => 'string',
        'fromAddress' => '\Walmart\Models\CP\US\Feeds\CreateLabelRequestFromAddress',
        'hasBattery' => 'string',
        'hazmat' => 'string',
        'packageType' => 'string',
        'purchaseOrderId' => 'string',
        'returnAddress' => '\Walmart\Models\CP\US\Feeds\CreateLabelRequestReturnAddress'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static array $openAPIFormats = [
        'accountType' => null,
        'addOns' => null,
        'boxDimensions' => null,
        'boxItems' => null,
        'carrierName' => null,
        'carrierServiceType' => null,
        'fromAddress' => null,
        'hasBattery' => null,
        'hazmat' => null,
        'packageType' => null,
        'purchaseOrderId' => null,
        'returnAddress' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'accountType' => false,
		'addOns' => false,
		'boxDimensions' => false,
		'boxItems' => false,
		'carrierName' => false,
		'carrierServiceType' => false,
		'fromAddress' => false,
		'hasBattery' => false,
		'hazmat' => false,
		'packageType' => false,
		'purchaseOrderId' => false,
		'returnAddress' => false
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static array $attributeMap = [
        'accountType' => 'accountType',
        'addOns' => 'addOns',
        'boxDimensions' => 'boxDimensions',
        'boxItems' => 'boxItems',
        'carrierName' => 'carrierName',
        'carrierServiceType' => 'carrierServiceType',
        'fromAddress' => 'fromAddress',
        'hasBattery' => 'hasBattery',
        'hazmat' => 'hazmat',
        'packageType' => 'packageType',
        'purchaseOrderId' => 'purchaseOrderId',
        'returnAddress' => 'returnAddress'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static array $setters = [
        'accountType' => 'setAccountType',
        'addOns' => 'setAddOns',
        'boxDimensions' => 'setBoxDimensions',
        'boxItems' => 'setBoxItems',
        'carrierName' => 'setCarrierName',
        'carrierServiceType' => 'setCarrierServiceType',
        'fromAddress' => 'setFromAddress',
        'hasBattery' => 'setHasBattery',
        'hazmat' => 'setHazmat',
        'packageType' => 'setPackageType',
        'purchaseOrderId' => 'setPurchaseOrderId',
        'returnAddress' => 'setReturnAddress'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static array $getters = [
        'accountType' => 'getAccountType',
        'addOns' => 'getAddOns',
        'boxDimensions' => 'getBoxDimensions',
        'boxItems' => 'getBoxItems',
        'carrierName' => 'getCarrierName',
        'carrierServiceType' => 'getCarrierServiceType',
        'fromAddress' => 'getFromAddress',
        'hasBattery' => 'getHasBattery',
        'hazmat' => 'getHazmat',
        'packageType' => 'getPackageType',
        'purchaseOrderId' => 'getPurchaseOrderId',
        'returnAddress' => 'getReturnAddress'
    ];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('accountType', $data ?? [], null);
        $this->setIfExists('addOns', $data ?? [], null);
        $this->setIfExists('boxDimensions', $data ?? [], null);
        $this->setIfExists('boxItems', $data ?? [], null);
        $this->setIfExists('carrierName', $data ?? [], null);
        $this->setIfExists('carrierServiceType', $data ?? [], null);
        $this->setIfExists('fromAddress', $data ?? [], null);
        $this->setIfExists('hasBattery', $data ?? [], null);
        $this->setIfExists('hazmat', $data ?? [], null);
        $this->setIfExists('packageType', $data ?? [], null);
        $this->setIfExists('purchaseOrderId', $data ?? [], null);
        $this->setIfExists('returnAddress', $data ?? [], null);
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        
        return $invalidProperties;
    }

    /**
     * Gets accountType
     *
     * @return string|null
    
     */
    public function getAccountType()
    {
        return $this->container['accountType'];
    }

    /**
     * Sets accountType
     *
     * @param string|null $accountType accountType
     *
     * @return self
    
     */
    public function setAccountType($accountType)
    {
        if (is_null($accountType)) {
            throw new \InvalidArgumentException('non-nullable accountType cannot be null');
        }
        
        $this->container['accountType'] = $accountType;
        return $this;
    }

    /**
     * Gets addOns
     *
     * @return string[]|null
    
     */
    public function getAddOns()
    {
        return $this->container['addOns'];
    }

    /**
     * Sets addOns
     *
     * @param string[]|null $addOns addOns
     *
     * @return self
    
     */
    public function setAddOns($addOns)
    {
        if (is_null($addOns)) {
            throw new \InvalidArgumentException('non-nullable addOns cannot be null');
        }
        
        $this->container['addOns'] = $addOns;
        return $this;
    }

    /**
     * Gets boxDimensions
     *
     * @return \Walmart\Models\CP\US\Feeds\CreateLabelRequestBoxDimensions|null
    
     */
    public function getBoxDimensions()
    {
        return $this->container['boxDimensions'];
    }

    /**
     * Sets boxDimensions
     *
     * @param \Walmart\Models\CP\US\Feeds\CreateLabelRequestBoxDimensions|null $boxDimensions boxDimensions
     *
     * @return self
    
     */
    public function setBoxDimensions($boxDimensions)
    {
        if (is_null($boxDimensions)) {
            throw new \InvalidArgumentException('non-nullable boxDimensions cannot be null');
        }
        
        $this->container['boxDimensions'] = $boxDimensions;
        return $this;
    }

    /**
     * Gets boxItems
     *
     * @return \Walmart\Models\CP\US\Feeds\LabelsDetailByPurchaseOrderId200ResponseDataInnerBoxItemsInner[]|null
    
     */
    public function getBoxItems()
    {
        return $this->container['boxItems'];
    }

    /**
     * Sets boxItems
     *
     * @param \Walmart\Models\CP\US\Feeds\LabelsDetailByPurchaseOrderId200ResponseDataInnerBoxItemsInner[]|null $boxItems boxItems
     *
     * @return self
    
     */
    public function setBoxItems($boxItems)
    {
        if (is_null($boxItems)) {
            throw new \InvalidArgumentException('non-nullable boxItems cannot be null');
        }
        
        $this->container['boxItems'] = $boxItems;
        return $this;
    }

    /**
     * Gets carrierName
     *
     * @return string|null
    
     */
    public function getCarrierName()
    {
        return $this->container['carrierName'];
    }

    /**
     * Sets carrierName
     *
     * @param string|null $carrierName carrierName
     *
     * @return self
    
     */
    public function setCarrierName($carrierName)
    {
        if (is_null($carrierName)) {
            throw new \InvalidArgumentException('non-nullable carrierName cannot be null');
        }
        
        $this->container['carrierName'] = $carrierName;
        return $this;
    }

    /**
     * Gets carrierServiceType
     *
     * @return string|null
    
     */
    public function getCarrierServiceType()
    {
        return $this->container['carrierServiceType'];
    }

    /**
     * Sets carrierServiceType
     *
     * @param string|null $carrierServiceType carrierServiceType
     *
     * @return self
    
     */
    public function setCarrierServiceType($carrierServiceType)
    {
        if (is_null($carrierServiceType)) {
            throw new \InvalidArgumentException('non-nullable carrierServiceType cannot be null');
        }
        
        $this->container['carrierServiceType'] = $carrierServiceType;
        return $this;
    }

    /**
     * Gets fromAddress
     *
     * @return \Walmart\Models\CP\US\Feeds\CreateLabelRequestFromAddress|null
    
     */
    public function getFromAddress()
    {
        return $this->container['fromAddress'];
    }

    /**
     * Sets fromAddress
     *
     * @param \Walmart\Models\CP\US\Feeds\CreateLabelRequestFromAddress|null $fromAddress fromAddress
     *
     * @return self
    
     */
    public function setFromAddress($fromAddress)
    {
        if (is_null($fromAddress)) {
            throw new \InvalidArgumentException('non-nullable fromAddress cannot be null');
        }
        
        $this->container['fromAddress'] = $fromAddress;
        return $this;
    }

    /**
     * Gets hasBattery
     *
     * @return string|null
    
     */
    public function getHasBattery()
    {
        return $this->container['hasBattery'];
    }

    /**
     * Sets hasBattery
     *
     * @param string|null $hasBattery hasBattery
     *
     * @return self
    
     */
    public function setHasBattery($hasBattery)
    {
        if (is_null($hasBattery)) {
            throw new \InvalidArgumentException('non-nullable hasBattery cannot be null');
        }
        
        $this->container['hasBattery'] = $hasBattery;
        return $this;
    }

    /**
     * Gets hazmat
     *
     * @return string|null
    
     */
    public function getHazmat()
    {
        return $this->container['hazmat'];
    }

    /**
     * Sets hazmat
     *
     * @param string|null $hazmat hazmat
     *
     * @return self
    
     */
    public function setHazmat($hazmat)
    {
        if (is_null($hazmat)) {
            throw new \InvalidArgumentException('non-nullable hazmat cannot be null');
        }
        
        $this->container['hazmat'] = $hazmat;
        return $this;
    }

    /**
     * Gets packageType
     *
     * @return string|null
    
     */
    public function getPackageType()
    {
        return $this->container['packageType'];
    }

    /**
     * Sets packageType
     *
     * @param string|null $packageType packageType
     *
     * @return self
    
     */
    public function setPackageType($packageType)
    {
        if (is_null($packageType)) {
            throw new \InvalidArgumentException('non-nullable packageType cannot be null');
        }
        
        $this->container['packageType'] = $packageType;
        return $this;
    }

    /**
     * Gets purchaseOrderId
     *
     * @return string|null
    
     */
    public function getPurchaseOrderId()
    {
        return $this->container['purchaseOrderId'];
    }

    /**
     * Sets purchaseOrderId
     *
     * @param string|null $purchaseOrderId purchaseOrderId
     *
     * @return self
    
     */
    public function setPurchaseOrderId($purchaseOrderId)
    {
        if (is_null($purchaseOrderId)) {
            throw new \InvalidArgumentException('non-nullable purchaseOrderId cannot be null');
        }
        
        $this->container['purchaseOrderId'] = $purchaseOrderId;
        return $this;
    }

    /**
     * Gets returnAddress
     *
     * @return \Walmart\Models\CP\US\Feeds\CreateLabelRequestReturnAddress|null
    
     */
    public function getReturnAddress()
    {
        return $this->container['returnAddress'];
    }

    /**
     * Sets returnAddress
     *
     * @param \Walmart\Models\CP\US\Feeds\CreateLabelRequestReturnAddress|null $returnAddress returnAddress
     *
     * @return self
    
     */
    public function setReturnAddress($returnAddress)
    {
        if (is_null($returnAddress)) {
            throw new \InvalidArgumentException('non-nullable returnAddress cannot be null');
        }
        
        $this->container['returnAddress'] = $returnAddress;
        return $this;
    }
}
