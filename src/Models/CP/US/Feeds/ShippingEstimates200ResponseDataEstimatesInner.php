<?php

/**
 * ShippingEstimates200ResponseDataEstimatesInner
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Walmart
 * @author   Jesse Evers
 * @link     https://highsidelabs.co
 * @email    jesse@highsidelabs.co
 */

/**
 * Ship With Walmart
 *
 * This class is auto-generated by the OpenAPI generator v7.12.0 (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

namespace Walmart\Models\CP\US\Feeds;

use Walmart\Models\BaseModel;

/**
 * ShippingEstimates200ResponseDataEstimatesInner Class Doc Comment
 *
 * @category Class

 * @package  Walmart
 * @author   Jesse Evers
 * @link     https://highsidelabs.co
 * @email    jesse@highsidelabs.co
 */
class ShippingEstimates200ResponseDataEstimatesInner extends BaseModel
{public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static string $openAPIModelName = 'shippingEstimates_200_response_data_estimates_inner';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static array $openAPITypes = [
        'addOns' => '\Walmart\Models\CP\US\Feeds\ShippingEstimates200ResponseDataEstimatesInnerAddOnsInner[]',
        'carrierDisplayName' => 'string',
        'carrierName' => 'string',
        'deliveryDate' => 'string',
        'displayName' => 'string',
        'estimatedRate' => '\Walmart\Models\CP\US\Feeds\ShippingEstimates200ResponseDataEstimatesInnerEstimatedRate',
        'isDeliveryPromiseFulfilled' => 'string',
        'name' => 'string',
        'serviceTypeGroupDisplayName' => 'string',
        'serviceTypeGroupName' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static array $openAPIFormats = [
        'addOns' => null,
        'carrierDisplayName' => null,
        'carrierName' => null,
        'deliveryDate' => null,
        'displayName' => null,
        'estimatedRate' => null,
        'isDeliveryPromiseFulfilled' => null,
        'name' => null,
        'serviceTypeGroupDisplayName' => null,
        'serviceTypeGroupName' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'addOns' => false,
		'carrierDisplayName' => false,
		'carrierName' => false,
		'deliveryDate' => false,
		'displayName' => false,
		'estimatedRate' => false,
		'isDeliveryPromiseFulfilled' => false,
		'name' => false,
		'serviceTypeGroupDisplayName' => false,
		'serviceTypeGroupName' => false
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static array $attributeMap = [
        'addOns' => 'addOns',
        'carrierDisplayName' => 'carrierDisplayName',
        'carrierName' => 'carrierName',
        'deliveryDate' => 'deliveryDate',
        'displayName' => 'displayName',
        'estimatedRate' => 'estimatedRate',
        'isDeliveryPromiseFulfilled' => 'isDeliveryPromiseFulfilled',
        'name' => 'name',
        'serviceTypeGroupDisplayName' => 'serviceTypeGroupDisplayName',
        'serviceTypeGroupName' => 'serviceTypeGroupName'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static array $setters = [
        'addOns' => 'setAddOns',
        'carrierDisplayName' => 'setCarrierDisplayName',
        'carrierName' => 'setCarrierName',
        'deliveryDate' => 'setDeliveryDate',
        'displayName' => 'setDisplayName',
        'estimatedRate' => 'setEstimatedRate',
        'isDeliveryPromiseFulfilled' => 'setIsDeliveryPromiseFulfilled',
        'name' => 'setName',
        'serviceTypeGroupDisplayName' => 'setServiceTypeGroupDisplayName',
        'serviceTypeGroupName' => 'setServiceTypeGroupName'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static array $getters = [
        'addOns' => 'getAddOns',
        'carrierDisplayName' => 'getCarrierDisplayName',
        'carrierName' => 'getCarrierName',
        'deliveryDate' => 'getDeliveryDate',
        'displayName' => 'getDisplayName',
        'estimatedRate' => 'getEstimatedRate',
        'isDeliveryPromiseFulfilled' => 'getIsDeliveryPromiseFulfilled',
        'name' => 'getName',
        'serviceTypeGroupDisplayName' => 'getServiceTypeGroupDisplayName',
        'serviceTypeGroupName' => 'getServiceTypeGroupName'
    ];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('addOns', $data ?? [], null);
        $this->setIfExists('carrierDisplayName', $data ?? [], null);
        $this->setIfExists('carrierName', $data ?? [], null);
        $this->setIfExists('deliveryDate', $data ?? [], null);
        $this->setIfExists('displayName', $data ?? [], null);
        $this->setIfExists('estimatedRate', $data ?? [], null);
        $this->setIfExists('isDeliveryPromiseFulfilled', $data ?? [], null);
        $this->setIfExists('name', $data ?? [], null);
        $this->setIfExists('serviceTypeGroupDisplayName', $data ?? [], null);
        $this->setIfExists('serviceTypeGroupName', $data ?? [], null);
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        
        return $invalidProperties;
    }

    /**
     * Gets addOns
     *
     * @return \Walmart\Models\CP\US\Feeds\ShippingEstimates200ResponseDataEstimatesInnerAddOnsInner[]|null
    
     */
    public function getAddOns()
    {
        return $this->container['addOns'];
    }

    /**
     * Sets addOns
     *
     * @param \Walmart\Models\CP\US\Feeds\ShippingEstimates200ResponseDataEstimatesInnerAddOnsInner[]|null $addOns addOns
     *
     * @return self
    
     */
    public function setAddOns($addOns)
    {
        if (is_null($addOns)) {
            throw new \InvalidArgumentException('non-nullable addOns cannot be null');
        }
        
        $this->container['addOns'] = $addOns;
        return $this;
    }

    /**
     * Gets carrierDisplayName
     *
     * @return string|null
    
     */
    public function getCarrierDisplayName()
    {
        return $this->container['carrierDisplayName'];
    }

    /**
     * Sets carrierDisplayName
     *
     * @param string|null $carrierDisplayName carrierDisplayName
     *
     * @return self
    
     */
    public function setCarrierDisplayName($carrierDisplayName)
    {
        if (is_null($carrierDisplayName)) {
            throw new \InvalidArgumentException('non-nullable carrierDisplayName cannot be null');
        }
        
        $this->container['carrierDisplayName'] = $carrierDisplayName;
        return $this;
    }

    /**
     * Gets carrierName
     *
     * @return string|null
    
     */
    public function getCarrierName()
    {
        return $this->container['carrierName'];
    }

    /**
     * Sets carrierName
     *
     * @param string|null $carrierName carrierName
     *
     * @return self
    
     */
    public function setCarrierName($carrierName)
    {
        if (is_null($carrierName)) {
            throw new \InvalidArgumentException('non-nullable carrierName cannot be null');
        }
        
        $this->container['carrierName'] = $carrierName;
        return $this;
    }

    /**
     * Gets deliveryDate
     *
     * @return string|null
    
     */
    public function getDeliveryDate()
    {
        return $this->container['deliveryDate'];
    }

    /**
     * Sets deliveryDate
     *
     * @param string|null $deliveryDate deliveryDate
     *
     * @return self
    
     */
    public function setDeliveryDate($deliveryDate)
    {
        if (is_null($deliveryDate)) {
            throw new \InvalidArgumentException('non-nullable deliveryDate cannot be null');
        }
        
        $this->container['deliveryDate'] = $deliveryDate;
        return $this;
    }

    /**
     * Gets displayName
     *
     * @return string|null
    
     */
    public function getDisplayName()
    {
        return $this->container['displayName'];
    }

    /**
     * Sets displayName
     *
     * @param string|null $displayName displayName
     *
     * @return self
    
     */
    public function setDisplayName($displayName)
    {
        if (is_null($displayName)) {
            throw new \InvalidArgumentException('non-nullable displayName cannot be null');
        }
        
        $this->container['displayName'] = $displayName;
        return $this;
    }

    /**
     * Gets estimatedRate
     *
     * @return \Walmart\Models\CP\US\Feeds\ShippingEstimates200ResponseDataEstimatesInnerEstimatedRate|null
    
     */
    public function getEstimatedRate()
    {
        return $this->container['estimatedRate'];
    }

    /**
     * Sets estimatedRate
     *
     * @param \Walmart\Models\CP\US\Feeds\ShippingEstimates200ResponseDataEstimatesInnerEstimatedRate|null $estimatedRate estimatedRate
     *
     * @return self
    
     */
    public function setEstimatedRate($estimatedRate)
    {
        if (is_null($estimatedRate)) {
            throw new \InvalidArgumentException('non-nullable estimatedRate cannot be null');
        }
        
        $this->container['estimatedRate'] = $estimatedRate;
        return $this;
    }

    /**
     * Gets isDeliveryPromiseFulfilled
     *
     * @return string|null
    
     */
    public function getIsDeliveryPromiseFulfilled()
    {
        return $this->container['isDeliveryPromiseFulfilled'];
    }

    /**
     * Sets isDeliveryPromiseFulfilled
     *
     * @param string|null $isDeliveryPromiseFulfilled isDeliveryPromiseFulfilled
     *
     * @return self
    
     */
    public function setIsDeliveryPromiseFulfilled($isDeliveryPromiseFulfilled)
    {
        if (is_null($isDeliveryPromiseFulfilled)) {
            throw new \InvalidArgumentException('non-nullable isDeliveryPromiseFulfilled cannot be null');
        }
        
        $this->container['isDeliveryPromiseFulfilled'] = $isDeliveryPromiseFulfilled;
        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
    
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
    
     */
    public function setName($name)
    {
        if (is_null($name)) {
            throw new \InvalidArgumentException('non-nullable name cannot be null');
        }
        
        $this->container['name'] = $name;
        return $this;
    }

    /**
     * Gets serviceTypeGroupDisplayName
     *
     * @return string|null
    
     */
    public function getServiceTypeGroupDisplayName()
    {
        return $this->container['serviceTypeGroupDisplayName'];
    }

    /**
     * Sets serviceTypeGroupDisplayName
     *
     * @param string|null $serviceTypeGroupDisplayName serviceTypeGroupDisplayName
     *
     * @return self
    
     */
    public function setServiceTypeGroupDisplayName($serviceTypeGroupDisplayName)
    {
        if (is_null($serviceTypeGroupDisplayName)) {
            throw new \InvalidArgumentException('non-nullable serviceTypeGroupDisplayName cannot be null');
        }
        
        $this->container['serviceTypeGroupDisplayName'] = $serviceTypeGroupDisplayName;
        return $this;
    }

    /**
     * Gets serviceTypeGroupName
     *
     * @return string|null
    
     */
    public function getServiceTypeGroupName()
    {
        return $this->container['serviceTypeGroupName'];
    }

    /**
     * Sets serviceTypeGroupName
     *
     * @param string|null $serviceTypeGroupName serviceTypeGroupName
     *
     * @return self
    
     */
    public function setServiceTypeGroupName($serviceTypeGroupName)
    {
        if (is_null($serviceTypeGroupName)) {
            throw new \InvalidArgumentException('non-nullable serviceTypeGroupName cannot be null');
        }
        
        $this->container['serviceTypeGroupName'] = $serviceTypeGroupName;
        return $this;
    }
}
