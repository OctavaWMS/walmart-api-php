<?php

/**
 * ShippingEstimates200ResponseData
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Walmart
 * @author   Jesse Evers
 * @link     https://highsidelabs.co
 * @email    jesse@highsidelabs.co
 */

/**
 * Ship With Walmart
 *
 * This class is auto-generated by the OpenAPI generator v7.12.0 (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

namespace Walmart\Models\MP\US\Shipping;

use Walmart\Models\BaseModel;

/**
 * ShippingEstimates200ResponseData Class Doc Comment
 *
 * @category Class

 * @package  Walmart
 * @author   Jesse Evers
 * @link     https://highsidelabs.co
 * @email    jesse@highsidelabs.co
 */
class ShippingEstimates200ResponseData extends BaseModel
{public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static string $openAPIModelName = 'shippingEstimates_200_response_data';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static array $openAPITypes = [
        'alertMessage' => 'string',
        'estimates' => '\Walmart\Models\MP\US\Shipping\ShippingEstimates200ResponseDataEstimatesInner[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static array $openAPIFormats = [
        'alertMessage' => null,
        'estimates' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'alertMessage' => false,
		'estimates' => false
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static array $attributeMap = [
        'alertMessage' => 'alertMessage',
        'estimates' => 'estimates'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static array $setters = [
        'alertMessage' => 'setAlertMessage',
        'estimates' => 'setEstimates'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static array $getters = [
        'alertMessage' => 'getAlertMessage',
        'estimates' => 'getEstimates'
    ];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('alertMessage', $data ?? [], null);
        $this->setIfExists('estimates', $data ?? [], null);
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        
        return $invalidProperties;
    }

    /**
     * Gets alertMessage
     *
     * @return string|null
    
     */
    public function getAlertMessage()
    {
        return $this->container['alertMessage'];
    }

    /**
     * Sets alertMessage
     *
     * @param string|null $alertMessage alertMessage
     *
     * @return self
    
     */
    public function setAlertMessage($alertMessage)
    {
        if (is_null($alertMessage)) {
            throw new \InvalidArgumentException('non-nullable alertMessage cannot be null');
        }
        
        $this->container['alertMessage'] = $alertMessage;
        return $this;
    }

    /**
     * Gets estimates
     *
     * @return \Walmart\Models\MP\US\Shipping\ShippingEstimates200ResponseDataEstimatesInner[]|null
    
     */
    public function getEstimates()
    {
        return $this->container['estimates'];
    }

    /**
     * Sets estimates
     *
     * @param \Walmart\Models\MP\US\Shipping\ShippingEstimates200ResponseDataEstimatesInner[]|null $estimates estimates
     *
     * @return self
    
     */
    public function setEstimates($estimates)
    {
        if (is_null($estimates)) {
            throw new \InvalidArgumentException('non-nullable estimates cannot be null');
        }
        
        $this->container['estimates'] = $estimates;
        return $this;
    }
}
